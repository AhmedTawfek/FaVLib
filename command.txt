# Please define the absolute path of the folder that you want virtuoso to map to, from there you will upload the files to virtuoso
export ABS_PATH=/media/apc/DATA1/Maastricht

# run this command to run Virtuoso, it will also install it if it is not there

sudo docker run --name virtuoso.2.7.1 \
    -p 8890:8890 -p 1111:1111 \
    -e DBA_PASSWORD=dba \
    -e SPARQL_UPDATE=true \
    -e DEFAULT_GRAPH=http://bio2rdf.com/bio2rdf_vocabulary: \
    -v ${ABS_PATH}/bio2rdf-github/virtuoso:/data \
    -d tenforce/virtuoso:1.3.2-virtuoso7.2.1


# go to the dumps folder in virtuoso spesified folder in ${ABS_PATH} and put your rdf dataset file there.

# To LOAD the quads into Virtuoso running docker run the following commands:

docker exec -it virtuoso.2.7.1 bash

isql-v -U dba -P dba

ld_dir('dumps', 'statemenets.nq', 'https://w3id.org/data2services/graph/pharmgkb');

rdf_loader_run();


# exit isql with: exit();
# exit bash with: exit


# Navigate to the path of the jar file inside the repository folder


# parmeters:
# -op: the operation: pex|nex   (positive examples/negative examples)
# -gr: the graph IRI
# -e : SPARQL endpoint
# -pfx: the prefix of the URI of the targeted predicates
# -pr: the name of the predicate (without the prefix) or "all" to select all predicates
# -l : define the limit of returned examples: (all|ineger| double as percentage like 0.2 for 20%)
# -log: define the logfile path


# the command here is to generate negative examples (100 by default) for a specifi predicate 
java -jar favlib-0.0.1-SNAPSHOT-jar-with-dependencies.jar -op nex -o ${ABS_PATH}/favlib/great.nq -gr https://w3id.org/data2services/graph/pharmgkb -e http://localhost:8890/sparql -pfx http://bio2rdf.org/pharmgkb_vocabulary: -pr Chemical-Variant-association -log ${ABS_PATH}/favlib/stats.log

# the command here is to generate negative examples (100 by default) for all predicates
java -jar favlib-0.0.1-SNAPSHOT-jar-with-dependencies.jar -op nex -o ${ABS_PATH}/favlib/great.nq -gr https://w3id.org/data2services/graph/pharmgkb -e http://localhost:8890/sparql -pfx http://bio2rdf.org/pharmgkb_vocabulary: -pr all -log ${ABS_PATH}/favlib/stats.log




# the command here is to generate negative examples for all predicates with a limit of 1000 example for each predicate
java -jar favlib-0.0.1-SNAPSHOT-jar-with-dependencies.jar -op nex -o ${ABS_PATH}/favlib/great.nq -gr https://w3id.org/data2services/graph/pharmgkb -e http://localhost:8890/sparql -pfx http://bio2rdf.org/pharmgkb_vocabulary: -pr all -l 1000 -log ${ABS_PATH}/favlib/stats.log


# the command here is to generate positive examples for all predicates with a limit of 1000 example for each predicate
java -jar favlib-0.0.1-SNAPSHOT-jar-with-dependencies.jar -op pex -o ${ABS_PATH}/favlib/great.nq -gr https://w3id.org/data2services/graph/pharmgkb -e http://localhost:8890/sparql -pfx http://bio2rdf.org/pharmgkb_vocabulary: -pr all -l 1000 -log ${ABS_PATH}/favlib/stats.log




# the command here is to generate negative examples for all predicates with a limit of 50% of total predicates example for each predicate
java -jar favlib-0.0.1-SNAPSHOT-jar-with-dependencies.jar -op nex -o ${ABS_PATH}/favlib/great.nq -gr https://w3id.org/data2services/graph/pharmgkb -e http://localhost:8890/sparql -pfx http://bio2rdf.org/pharmgkb_vocabulary: -pr all -l 0.5 -log ${ABS_PATH}/favlib/stats.log


# the command here is to generate positive examples for all predicates with a limit of 50% of total predicates example for each predicate
java -jar favlib-0.0.1-SNAPSHOT-jar-with-dependencies.jar -op pex -o ${ABS_PATH}/favlib/great.nq -gr https://w3id.org/data2services/graph/pharmgkb -e http://localhost:8890/sparql -pfx http://bio2rdf.org/pharmgkb_vocabulary: -pr all -l 0.5 -log ${ABS_PATH}/favlib/stats.log
